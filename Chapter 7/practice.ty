1. What is the function that creates Regex objects?
re.compile() function returns Regex objects

2. Why are raw strings often used when creating Regex objects?
They are used so backlashes wont be escaped

3. What does the search() method return?
it returns Match objects

4. How do you get the actual strings that match the pattern from a Match object?
the group() returns the matched text

5. In the regex created from r'(\d\d\d)-(\d\d\d-\d\d\d\d)', what does group 0 cover? Group 1? Group 2?
group 0 returns the entire match 
group 1 returns the digits in the first bracket 
group 2 returns the digits in the second bracket

6.Parentheses and periods have specific meanings in regular expression syntax. How would you specify that you want a regex to match actual parentheses and period characters?
using the backlash : "\.,\(, and \).

7. The findall() method returns a list of strings or a list of tuples of strings. What makes it return one or the other?
it returns tuples if there are groups in the regular expression

8. What does the | character signify in regular expressions?
its a pipe and can be used anywhere to match one of many expressions 

9. What two things does the ? character signify in regular expressions?
Used for optional matching 

10. What is the difference between the + and * characters in regular expressions?
* means "match zero or more" + means "match one or more"

11. What is the difference between {3} and {3,5} in regular expressions?
{3} will match the string three times
{3,5} will match it 3,4 and 5 time

12. What do the \d, \w, and \s shorthand character classes signify in regular expressions?

-\d stands for digit character
-\w stands for any letter, numeric digit or underscore
-\s stands for any space, tab or newline character

13. What do the \D, \W, and \S shorthand character classes signify in regular expressions?

-\D stands for any character that is not a numeric digit from 0-9
-\W stands for any character that is not a letter, numeric digit or the underscore character
-\S stands for any character that is not a space, tab, or newline.

14. What is the difference between .* and .*??

- .* is used for "anything"
- .*? to match any and all text in a non-greedy way

15. What is the character class syntax to match all numbers and lowercase letters?
[a-zA-Z0-9] 

16. How do you make a regular expression case-insensitive?
to make it case sensitive, you pass re.IGNORECASE or re.I as a second argument to re.compile()

17. What does the . character normally match? What does it match if re.DOTALL is passed as the second argument to re.compile()?
. matches any character except for a newline

18. If numRegex = re.compile(r'\d+'), what will numRegex.sub('X', '12 drummers, 11 pipers, five rings, 3 hens') return?
The sub() call will return the string 'X drummers, X pipers, five rings, X hens'.

19. What does passing re.VERBOSE as the second argument to re.compile() allow you to do?
The re.VERBOSE argument allows you to add whitespace and comments to the string passed to re.compile().

20. How would you write a regex that matches a number with commas for every three digits? It must match the following:
 re.compile(r'^\d{1,3}(,\d{3})*$') will create this regex, but other regex strings can produce a similar regular expression.

21. How would you write a regex that matches a sentence where the first word is either Alice, Bob, or Carol; the second word is either eats, pets, or throws; the third word is apples, cats, or baseballs; and the sentence ends with a period? This regex should be case-insensitive. It must match the following:
re.compile(r'(Alice|Bob|Carol)\s(eats|pets|throws)\s(apples|cats|baseballs)\.', re.I)